import { createClient } from '@supabase/supabase-js'

// –í–†–ï–ú–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º
// –°–µ—Ä–≤–µ—Ä prorab360.online –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (503 –æ—à–∏–±–∫–∞)
// –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å localStorage –¥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞

const supabaseUrl = 'https://prorab360.online' // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE'

// –§–ª–∞–≥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
const FORCE_OFFLINE_MODE = true;

console.log('üîß Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (hardcoded):')
console.log('üîß URL:', supabaseUrl)
console.log('üîß Key:', supabaseAnonKey.substring(0, 20) + '...')

// –°–æ–∑–¥–∞–µ–º –º–æ–∫-–∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
const createMockSupabaseClient = () => {
  console.log('üîß –°–æ–∑–¥–∞–µ–º –º–æ–∫-–∫–ª–∏–µ–Ω—Ç Supabase –¥–ª—è –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞');
  
  return {
    auth: {
      getUser: async () => ({ data: { user: null }, error: null }),
      onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),
      signInWithPassword: async () => ({ data: { user: null }, error: null }),
      signUp: async () => ({ data: { user: null }, error: null }),
      signOut: async () => ({ error: null }),
    },
    from: (table: string) => ({
      select: () => ({
        eq: () => ({ data: [], error: null }),
        order: () => ({ data: [], error: null }),
        limit: () => ({ data: [], error: null }),
        single: () => ({ data: null, error: null }),
      }),
      insert: () => ({
        select: () => ({
          single: () => ({ data: null, error: null }),
        }),
      }),
      update: () => ({
        eq: () => ({
          select: () => ({
            single: () => ({ data: null, error: null }),
          }),
        }),
      }),
      delete: () => ({
        eq: () => ({ data: null, error: null }),
      }),
    }),
    storage: {
      from: () => ({
        upload: async () => ({ data: null, error: null }),
        getPublicUrl: () => ({ data: { publicUrl: '' } }),
      }),
    },
  };
};

// –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç, –Ω–æ –æ–Ω –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ
const realSupabaseClient = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
  },
  global: {
    headers: {
      'Content-Type': 'application/json',
    },
  },
  db: {
    schema: 'public',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫-–∫–ª–∏–µ–Ω—Ç –≤ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ
export const supabase = FORCE_OFFLINE_MODE ? createMockSupabaseClient() : realSupabaseClient;

console.log('üîß Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', FORCE_OFFLINE_MODE ? '–ú–û–ö-–†–ï–ñ–ò–ú' : '–û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú');
console.log('üîß –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ —Å localStorage');