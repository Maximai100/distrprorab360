import React from 'react';
import { Project, FinanceEntry, WorkStage } from '../../types';
import { ListItem } from '../ui/ListItem';
import { IconTrendingUp, IconCheckCircle, IconImage, IconChevronRight } from '../common/Icon';
import { financeCategoryToRu } from '../../utils';

interface ClientReportScreenProps {
  project: Project;
  estimates: any[];
  financeEntries: FinanceEntry[];
  workStages: WorkStage[];
  formatCurrency: (amount: number) => string;
  onBack: () => void;
}

export const ClientReportScreen: React.FC<ClientReportScreenProps> = ({
  project,
  estimates,
  financeEntries,
  workStages,
  formatCurrency,
  onBack
}) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
  const today = new Date().toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
  const projectEstimates = estimates.filter(e => e.project_id === project.id);
  const projectFinanceEntries = financeEntries.filter(f => f.projectId === project.id);
  const projectWorkStages = workStages.filter(w => w.projectId === project.id);

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞)
  const totalEstimateAmount = projectEstimates.reduce((sum, estimate) => {
    const estimateTotal = estimate.items?.reduce((itemSum: number, item: any) =>
      itemSum + (item.quantity * item.price), 0) || 0;
    return sum + estimateTotal;
  }, 0);

  const totalPaidByClient = projectFinanceEntries
    .filter(entry => entry.type === 'income')
    .reduce((sum, entry) => sum + entry.amount, 0);

  const remainingToPay = totalEstimateAmount - totalPaidByClient;

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç
  const completedWorkStages = projectWorkStages
    .filter(stage => stage.status === 'completed')
    .sort((a, b) => new Date(b.endDate || 0).getTime() - new Date(a.endDate || 0).getTime());

  // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç (–≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ)
  const mockPhotos = [
    { id: 1, title: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç', date: '15.01.2024' },
    { id: 2, title: '–§—É–Ω–¥–∞–º–µ–Ω—Ç', date: '20.01.2024' },
    { id: 3, title: '–°—Ç–µ–Ω—ã', date: '25.01.2024' },
    { id: 4, title: '–ö—Ä—ã—à–∞', date: '30.01.2024' },
    { id: 5, title: '–û—Ç–¥–µ–ª–∫–∞', date: '05.02.2024' }
  ];


  return (
    <>
      <header className="projects-list-header">
        <button onClick={onBack} className="back-btn">
          <IconChevronRight style={{ transform: 'rotate(180deg)' }} />
          <span>–ù–∞–∑–∞–¥</span>
        </button>
        <h1>–û—Ç—á–µ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞</h1>
      </header>

      <main className="project-detail-main" style={{ display: 'flex', flexDirection: 'column', gap: 'var(--spacing-m)' }}>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞ */}
        <div className="card">
          <h2 style={{ 
            marginBottom: 'var(--spacing-s)', 
            color: 'var(--color-text-primary)',
            fontSize: 'var(--font-size-l)',
            textAlign: 'center'
          }}>
            –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É "{project.name}"
          </h2>
          <p style={{ 
            textAlign: 'center', 
            color: 'var(--color-text-secondary)',
            fontSize: 'var(--font-size-m)'
          }}>
            –æ—Ç {today}
          </p>
        </div>

        {/* –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ ‚Äî —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ */}
        <div className="card project-section financial-dashboard">
          <div className="project-section-header">
            <h3>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –¥–∞—à–±–æ—Ä–¥</h3>
          </div>
          <div className="project-section-body">
            <div className="dashboard-grid-final">
              <div className="dashboard-column">
                <div className="dashboard-item">
                  <span className="dashboard-value">{formatCurrency(totalEstimateAmount)}</span>
                  <span className="dashboard-label">–°—É–º–º–∞ —Å–º–µ—Ç</span>
                </div>
                <div className="dashboard-item">
                  <span className="dashboard-value payment-value">{formatCurrency(totalPaidByClient)}</span>
                  <span className="dashboard-label">–û–ø–ª–∞—á–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–º</span>
                </div>
              </div>
              <div className="dashboard-column">
                <div className="dashboard-item expenses-card">
                  <span className="dashboard-value expense-value">{formatCurrency(Math.max(remainingToPay, 0))}</span>
                  <span className="dashboard-label">–û—Å—Ç–∞—Ç–æ–∫ –∫ –æ–ø–ª–∞—Ç–µ</span>
                  <div className="dashboard-breakdown">
                    <div className="breakdown-item">
                      <span>–°—Ç–∞—Ç—É—Å</span>
                      <span>{remainingToPay > 0 ? '–ö –æ–ø–ª–∞—Ç–µ' : '–û–ø–ª–∞—á–µ–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é'}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className="dashboard-item profit-card-final">
              <span className="dashboard-label">–ò—Ç–æ–≥</span>
              <div className="profit-details-final">
                <span className="dashboard-value profit-value">{formatCurrency(totalPaidByClient)}</span>
                <span className="dashboard-label">–û–ø–ª–∞—á–µ–Ω–æ –∏–∑ {formatCurrency(totalEstimateAmount)}</span>
              </div>
            </div>
          </div>
        </div>

        {/* –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã */}
        <div className="card">
          <h3 style={{ marginBottom: 'var(--spacing-m)', color: 'var(--color-text-primary)' }}>
            <IconCheckCircle style={{ marginRight: 'var(--spacing-s)' }} />
            –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
          </h3>

          {completedWorkStages.length > 0 ? (
            <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--spacing-s)' }}>
              {completedWorkStages.map((stage) => (
                <ListItem
                  key={stage.id}
                  icon={<IconCheckCircle />}
                  title={stage.title}
                  subtitle={stage.endDate ? 
                    `–ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${new Date(stage.endDate).toLocaleDateString('ru-RU')}` : 
                    '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'
                  }
                  amountText={stage.progress ? `${stage.progress}%` : undefined}
                  amountColor="var(--color-success)"
                />
              ))}
            </div>
          ) : (
            <p style={{ color: 'var(--color-text-secondary)', textAlign: 'center', padding: 'var(--spacing-l)' }}>
              –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã
            </p>
          )}
        </div>

        {/* –§–æ—Ç–æ–æ—Ç—á–µ—Ç */}
        <div className="card">
          <h3 style={{ marginBottom: 'var(--spacing-m)', color: 'var(--color-text-primary)' }}>
            <IconImage style={{ marginRight: 'var(--spacing-s)' }} />
            –§–æ—Ç–æ–æ—Ç—á–µ—Ç
          </h3>

          <div style={{ 
            display: 'grid', 
            gap: 'var(--spacing-m)', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
            marginBottom: 'var(--spacing-m)'
          }}>
            {mockPhotos.map((photo) => (
              <div 
                key={photo.id} 
                style={{
                  backgroundColor: 'var(--color-surface-2)',
                  borderRadius: 'var(--border-radius-s)',
                  padding: 'var(--spacing-m)',
                  textAlign: 'center',
                  border: '1px solid var(--color-separator)'
                }}
              >
                <div style={{
                  width: '100%',
                  height: '100px',
                  backgroundColor: 'var(--color-surface-1)',
                  borderRadius: 'var(--border-radius-s)',
                  marginBottom: 'var(--spacing-s)',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  color: 'var(--color-text-secondary)',
                  fontSize: 'var(--font-size-s)'
                }}>
                  üì∑
                </div>
                <div style={{ fontSize: 'var(--font-size-s)', color: 'var(--color-text-primary)' }}>
                  {photo.title}
                </div>
                <div style={{ fontSize: 'var(--font-size-s)', color: 'var(--color-text-secondary)' }}>
                  {photo.date}
                </div>
              </div>
            ))}
          </div>

          <p style={{ 
            color: 'var(--color-text-secondary)', 
            textAlign: 'center', 
            fontSize: 'var(--font-size-s)',
            fontStyle: 'italic'
          }}>
            –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø—Ä–æ–µ–∫—Ç–∞
          </p>
        </div>

      </main>
    </>
  );
};
